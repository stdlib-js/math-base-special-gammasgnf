{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnanf = require( '@stdlib/math-base-assert-is-nanf' );\nvar floorf = require( '@stdlib/math-base-special-floorf' );\nvar float64ToFloat32 = require( '@stdlib/number-float64-base-to-float32' );\n\n\n// MAIN //\n\n/**\n* Computes the sign of the gamma function for a single-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {number} sign of the gamma function\n*\n* @example\n* var v = gammasgnf( 1.0 );\n* // returns 1.0\n*\n* v = gammasgnf( -2.5 );\n* // returns -1.0\n*\n* v = gammasgnf( 0.0 );\n* // returns 0.0\n*\n* v = gammasgnf( NaN );\n* // returns NaN\n*/\nfunction gammasgnf( x ) {\n\tvar fx;\n\n\tif ( isnanf( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x > 0.0 ) {\n\t\treturn 1.0;\n\t}\n\tfx = floorf( x );\n\tif ( x === fx ) {\n\t\treturn 0.0;\n\t}\n\tfx = float64ToFloat32( fx / 2.0 );\n\tif ( fx === floorf( fx ) ) {\n\t\treturn 1.0;\n\t}\n\treturn -1.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gammasgnf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the sign of the gamma function for a single-precision floating-point number.\n*\n* @module @stdlib/math-base-special-gammasgnf\n*\n* @example\n* var gammasgnf = require( '@stdlib/math-base-special-gammasgnf' );\n*\n* var v = gammasgnf( 1.0 );\n* // returns 1.0\n*\n* v = gammasgnf( -2.5 );\n* // returns -1.0\n*\n* v = gammasgnf( 0.0 );\n* // returns 0.0\n*\n* v = gammasgnf( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAS,QAAS,kCAAmC,EACrDC,EAAS,QAAS,kCAAmC,EACrDC,EAAmB,QAAS,wCAAyC,EAwBzE,SAASC,EAAWC,EAAI,CACvB,IAAIC,EAEJ,OAAKL,EAAQI,CAAE,EACP,IAEHA,EAAI,EACD,GAERC,EAAKJ,EAAQG,CAAE,EACVA,IAAMC,EACH,GAERA,EAAKH,EAAkBG,EAAK,CAAI,EAC3BA,IAAOJ,EAAQI,CAAG,EACf,EAED,IACR,CAKAN,EAAO,QAAUI,IC5BjB,IAAIG,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isnanf", "floorf", "float64ToFloat32", "gammasgnf", "x", "fx", "main"]
}
