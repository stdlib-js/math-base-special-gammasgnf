{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnanf from '@stdlib/math-base-assert-is-nanf';\nimport floorf from '@stdlib/math-base-special-floorf';\nimport float64ToFloat32 from '@stdlib/number-float64-base-to-float32';\n\n\n// MAIN //\n\n/**\n* Computes the sign of the gamma function for a single-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {number} sign of the gamma function\n*\n* @example\n* var v = gammasgnf( 1.0 );\n* // returns 1.0\n*\n* v = gammasgnf( -2.5 );\n* // returns -1.0\n*\n* v = gammasgnf( 0.0 );\n* // returns 0.0\n*\n* v = gammasgnf( NaN );\n* // returns NaN\n*/\nfunction gammasgnf( x ) {\n\tvar fx;\n\n\tif ( isnanf( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x > 0.0 ) {\n\t\treturn 1.0;\n\t}\n\tfx = floorf( x );\n\tif ( x === fx ) {\n\t\treturn 0.0;\n\t}\n\tfx = float64ToFloat32( fx / 2.0 );\n\tif ( fx === floorf( fx ) ) {\n\t\treturn 1.0;\n\t}\n\treturn -1.0;\n}\n\n\n// EXPORTS //\n\nexport default gammasgnf;\n"],"names":["gammasgnf","x","fx","isnanf","NaN","floorf","float64ToFloat32"],"mappings":";;+SAgDA,SAASA,EAAWC,GACnB,IAAIC,EAEJ,OAAKC,EAAQF,GACLG,IAEHH,EAAI,EACD,EAGHA,KADLC,EAAKG,EAAQJ,IAEL,GAERC,EAAKI,EAAkBJ,EAAK,MAChBG,EAAQH,GACZ,GAEA,CACT"}